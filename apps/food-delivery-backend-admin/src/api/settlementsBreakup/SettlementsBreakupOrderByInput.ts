import { SortOrder } from "../../util/SortOrder";

export type SettlementsBreakupOrderByInput = {
  amountForGstUnder95?: SortOrder;
  amountForTcs?: SortOrder;
  user_id?: SortOrder;
  bankUtr?: SortOrder;
  baseServiceFee?: SortOrder;
  baseServiceFeePercentage?: SortOrder;
  businessname?: SortOrder;
  cancellationOrRejectionReason?: SortOrder;
  cancellationOrRejectionState?: SortOrder;
  cancellationPolicy?: SortOrder;
  cashReceivedSelfDelivery?: SortOrder;
  commissionableAmount?: SortOrder;
  createdAt?: SortOrder;
  creditDebitNoteAdjustment?: SortOrder;
  customerCompensation?: SortOrder;
  customerPayable?: SortOrder;
  deliveryCharge?: SortOrder;
  deliveryChargesRecovery?: SortOrder;
  deliveryStateCode?: SortOrder;
  discountConstruct?: SortOrder;
  extraInventoryAds?: SortOrder;
  fulfilmentFee?: SortOrder;
  fulfilmentFeePerKm?: SortOrder;
  gstPaidByPlatform?: SortOrder;
  gstToBePaidByRestaurant?: SortOrder;
  id?: SortOrder;
  netAdditions?: SortOrder;
  netDeductions?: SortOrder;
  orderDateTime?: SortOrder;
  orderDistanceKm?: SortOrder;
  order_id?: SortOrder;
  orderLevelPayout?: SortOrder;
  orderStatus?: SortOrder;
  orderType?: SortOrder;
  packagingCharge?: SortOrder;
  paymentMechanismFee?: SortOrder;
  paymentMode?: SortOrder;
  payout_cycle_id?: SortOrder;
  promoRecoveryAdjustment?: SortOrder;
  restaurantDiscountFromOthers?: SortOrder;
  restaurantDiscountFromPromo?: SortOrder;
  restaurantId?: SortOrder;
  settlementDate?: SortOrder;
  settlementStatus?: SortOrder;
  subtotal?: SortOrder;
  taxCollectedAtSource?: SortOrder;
  taxesOnServicePaymentFees?: SortOrder;
  tcsIgstAmount?: SortOrder;
  tds194OAmount?: SortOrder;
  totalGstFromCustomers?: SortOrder;
  unsettledAmount?: SortOrder;
  updatedAt?: SortOrder;
  weekNo?: SortOrder;
};
