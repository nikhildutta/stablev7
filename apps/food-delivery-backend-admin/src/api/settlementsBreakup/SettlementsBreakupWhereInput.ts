import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { AppUserWhereUniqueInput } from "../appUser/AppUserWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { OrderHistoryWhereUniqueInput } from "../orderHistory/OrderHistoryWhereUniqueInput";
import { PayoutCycleWhereUniqueInput } from "../payoutCycle/PayoutCycleWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";

export type SettlementsBreakupWhereInput = {
  amountForGstUnder95?: DecimalNullableFilter;
  amountForTcs?: DecimalNullableFilter;
  appUsers?: AppUserWhereUniqueInput;
  bankUtr?: StringNullableFilter;
  baseServiceFee?: DecimalNullableFilter;
  baseServiceFeePercentage?: DecimalNullableFilter;
  businessname?: StringNullableFilter;
  cancellationOrRejectionReason?: StringNullableFilter;
  cancellationOrRejectionState?: StringNullableFilter;
  cancellationPolicy?: StringNullableFilter;
  cashReceivedSelfDelivery?: DecimalNullableFilter;
  commissionableAmount?: DecimalNullableFilter;
  createdAt?: DateTimeNullableFilter;
  creditDebitNoteAdjustment?: DecimalNullableFilter;
  customerCompensation?: DecimalNullableFilter;
  customerPayable?: DecimalNullableFilter;
  deliveryCharge?: DecimalNullableFilter;
  deliveryChargesRecovery?: DecimalNullableFilter;
  deliveryStateCode?: StringNullableFilter;
  discountConstruct?: StringNullableFilter;
  extraInventoryAds?: DecimalNullableFilter;
  fulfilmentFee?: DecimalNullableFilter;
  fulfilmentFeePerKm?: DecimalNullableFilter;
  gstPaidByPlatform?: DecimalNullableFilter;
  gstToBePaidByRestaurant?: DecimalNullableFilter;
  id?: StringFilter;
  netAdditions?: DecimalNullableFilter;
  netDeductions?: DecimalNullableFilter;
  orderDateTime?: DateTimeNullableFilter;
  orderDistanceKm?: DecimalNullableFilter;
  orderHistory?: OrderHistoryWhereUniqueInput;
  orderLevelPayout?: DecimalNullableFilter;
  orderStatus?: StringNullableFilter;
  orderType?: StringNullableFilter;
  packagingCharge?: DecimalNullableFilter;
  paymentMechanismFee?: DecimalNullableFilter;
  paymentMode?: StringNullableFilter;
  payoutCycles?: PayoutCycleWhereUniqueInput;
  promoRecoveryAdjustment?: DecimalNullableFilter;
  restaurantDiscountFromOthers?: DecimalNullableFilter;
  restaurantDiscountFromPromo?: DecimalNullableFilter;
  restaurantId?: StringFilter;
  settlementDate?: DateTimeNullableFilter;
  settlementStatus?: StringNullableFilter;
  subtotal?: DecimalNullableFilter;
  taxCollectedAtSource?: DecimalNullableFilter;
  taxesOnServicePaymentFees?: DecimalNullableFilter;
  tcsIgstAmount?: DecimalNullableFilter;
  tds194OAmount?: DecimalNullableFilter;
  totalGstFromCustomers?: DecimalNullableFilter;
  unsettledAmount?: DecimalNullableFilter;
  updatedAt?: DateTimeNullableFilter;
  weekNo?: IntNullableFilter;
};
