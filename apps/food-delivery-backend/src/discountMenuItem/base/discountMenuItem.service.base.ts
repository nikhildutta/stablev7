/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DiscountMenuItem as PrismaDiscountMenuItem,
  Discount as PrismaDiscount,
  MenuItem as PrismaMenuItem,
} from "@prisma/client";

export class DiscountMenuItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiscountMenuItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.discountMenuItem.count(args);
  }

  async discountMenuItems<T extends Prisma.DiscountMenuItemFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountMenuItemFindManyArgs>
  ): Promise<PrismaDiscountMenuItem[]> {
    return this.prisma.discountMenuItem.findMany<Prisma.DiscountMenuItemFindManyArgs>(
      args
    );
  }
  async discountMenuItem<T extends Prisma.DiscountMenuItemFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountMenuItemFindUniqueArgs>
  ): Promise<PrismaDiscountMenuItem | null> {
    return this.prisma.discountMenuItem.findUnique(args);
  }
  async createDiscountMenuItem<T extends Prisma.DiscountMenuItemCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountMenuItemCreateArgs>
  ): Promise<PrismaDiscountMenuItem> {
    return this.prisma.discountMenuItem.create<T>(args);
  }
  async updateDiscountMenuItem<T extends Prisma.DiscountMenuItemUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountMenuItemUpdateArgs>
  ): Promise<PrismaDiscountMenuItem> {
    return this.prisma.discountMenuItem.update<T>(args);
  }
  async deleteDiscountMenuItem<T extends Prisma.DiscountMenuItemDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountMenuItemDeleteArgs>
  ): Promise<PrismaDiscountMenuItem> {
    return this.prisma.discountMenuItem.delete(args);
  }

  async getDiscount(parentId: string): Promise<PrismaDiscount | null> {
    return this.prisma.discountMenuItem
      .findUnique({
        where: { id: parentId },
      })
      .discount();
  }

  async getMenuItems(parentId: string): Promise<PrismaMenuItem | null> {
    return this.prisma.discountMenuItem
      .findUnique({
        where: { id: parentId },
      })
      .menuItems();
  }
}
