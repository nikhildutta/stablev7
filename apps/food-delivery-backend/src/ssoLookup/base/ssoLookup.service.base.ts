/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SsoLookup as PrismaSsoLookup,
  AppUser as PrismaAppUser,
} from "@prisma/client";

export class SsoLookupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SsoLookupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ssoLookup.count(args);
  }

  async ssoLookups<T extends Prisma.SsoLookupFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SsoLookupFindManyArgs>
  ): Promise<PrismaSsoLookup[]> {
    return this.prisma.ssoLookup.findMany<Prisma.SsoLookupFindManyArgs>(args);
  }
  async ssoLookup<T extends Prisma.SsoLookupFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SsoLookupFindUniqueArgs>
  ): Promise<PrismaSsoLookup | null> {
    return this.prisma.ssoLookup.findUnique(args);
  }
  async createSsoLookup<T extends Prisma.SsoLookupCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SsoLookupCreateArgs>
  ): Promise<PrismaSsoLookup> {
    return this.prisma.ssoLookup.create<T>(args);
  }
  async updateSsoLookup<T extends Prisma.SsoLookupUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SsoLookupUpdateArgs>
  ): Promise<PrismaSsoLookup> {
    return this.prisma.ssoLookup.update<T>(args);
  }
  async deleteSsoLookup<T extends Prisma.SsoLookupDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SsoLookupDeleteArgs>
  ): Promise<PrismaSsoLookup> {
    return this.prisma.ssoLookup.delete(args);
  }

  async getAppUsers(parentId: string): Promise<PrismaAppUser | null> {
    return this.prisma.ssoLookup
      .findUnique({
        where: { id: parentId },
      })
      .appUsers();
  }
}
