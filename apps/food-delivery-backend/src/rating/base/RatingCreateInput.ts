/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsNumber, IsOptional, ValidateNested, IsDate } from "class-validator";
import { Decimal } from "decimal.js";
import { OrderHistoryWhereUniqueInput } from "../../orderHistory/base/OrderHistoryWhereUniqueInput";
import { Type } from "class-transformer";
import { OrderItemsRatingCreateNestedManyWithoutRatingsInput } from "./OrderItemsRatingCreateNestedManyWithoutRatingsInput";

@InputType()
class RatingCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  cleanliness?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  foodQuality?: Decimal | null;

  @ApiProperty({
    required: true,
    type: () => OrderHistoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderHistoryWhereUniqueInput)
  @Field(() => OrderHistoryWhereUniqueInput)
  orderHistory!: OrderHistoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrderItemsRatingCreateNestedManyWithoutRatingsInput,
  })
  @ValidateNested()
  @Type(() => OrderItemsRatingCreateNestedManyWithoutRatingsInput)
  @IsOptional()
  @Field(() => OrderItemsRatingCreateNestedManyWithoutRatingsInput, {
    nullable: true,
  })
  orderItemsRatings?: OrderItemsRatingCreateNestedManyWithoutRatingsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ratingForCustomer?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ratingOfDelivery?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ratingOfOrder?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  service?: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  valueForMoney?: Decimal | null;
}

export { RatingCreateInput as RatingCreateInput };
