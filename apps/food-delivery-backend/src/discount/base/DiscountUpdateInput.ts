/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CouponUpdateManyWithoutDiscountsInput } from "./CouponUpdateManyWithoutDiscountsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsBoolean,
  IsInt,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { DiscountMenuItemUpdateManyWithoutDiscountsInput } from "./DiscountMenuItemUpdateManyWithoutDiscountsInput";
import { DiscountTypeWhereUniqueInput } from "../../discountType/base/DiscountTypeWhereUniqueInput";
import { DiscountWindowMapUpdateManyWithoutDiscountsInput } from "./DiscountWindowMapUpdateManyWithoutDiscountsInput";
import { Decimal } from "decimal.js";

@InputType()
class DiscountUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CouponUpdateManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => CouponUpdateManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => CouponUpdateManyWithoutDiscountsInput, {
    nullable: true,
  })
  coupons?: CouponUpdateManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
    type: () => DiscountMenuItemUpdateManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => DiscountMenuItemUpdateManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => DiscountMenuItemUpdateManyWithoutDiscountsInput, {
    nullable: true,
  })
  discountMenuItem?: DiscountMenuItemUpdateManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
    type: () => DiscountTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscountTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscountTypeWhereUniqueInput, {
    nullable: true,
  })
  discountType?: DiscountTypeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DiscountWindowMapUpdateManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => DiscountWindowMapUpdateManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => DiscountWindowMapUpdateManyWithoutDiscountsInput, {
    nullable: true,
  })
  discountWindowMap?: DiscountWindowMapUpdateManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expirationDate?: Date;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxDiscount?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  minimumOrderValue?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeOfDiscount?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  value?: Decimal | null;
}

export { DiscountUpdateInput as DiscountUpdateInput };
