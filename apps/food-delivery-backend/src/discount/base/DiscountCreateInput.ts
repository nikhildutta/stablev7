/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CouponCreateNestedManyWithoutDiscountsInput } from "./CouponCreateNestedManyWithoutDiscountsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsBoolean,
  IsInt,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { DiscountMenuItemCreateNestedManyWithoutDiscountsInput } from "./DiscountMenuItemCreateNestedManyWithoutDiscountsInput";
import { DiscountTypeWhereUniqueInput } from "../../discountType/base/DiscountTypeWhereUniqueInput";
import { DiscountWindowMapCreateNestedManyWithoutDiscountsInput } from "./DiscountWindowMapCreateNestedManyWithoutDiscountsInput";
import { Decimal } from "decimal.js";

@InputType()
class DiscountCreateInput {
  @ApiProperty({
    required: false,
    type: () => CouponCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => CouponCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => CouponCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  coupons?: CouponCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
    type: () => DiscountMenuItemCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => DiscountMenuItemCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => DiscountMenuItemCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  discountMenuItem?: DiscountMenuItemCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: true,
    type: () => DiscountTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscountTypeWhereUniqueInput)
  @Field(() => DiscountTypeWhereUniqueInput)
  discountType!: DiscountTypeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DiscountWindowMapCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => DiscountWindowMapCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => DiscountWindowMapCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  discountWindowMap?: DiscountWindowMapCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  expirationDate!: Date;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxDiscount?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  minimumOrderValue?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeOfDiscount?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  value?: Decimal | null;
}

export { DiscountCreateInput as DiscountCreateInput };
