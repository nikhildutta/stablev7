/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  ValidateNested,
  IsOptional,
  IsDate,
  IsBoolean,
} from "class-validator";
import { CouponRedemptionCreateNestedManyWithoutCouponsInput } from "./CouponRedemptionCreateNestedManyWithoutCouponsInput";
import { Type } from "class-transformer";
import { DiscountWhereUniqueInput } from "../../discount/base/DiscountWhereUniqueInput";
import { OrderHistoryCreateNestedManyWithoutCouponsInput } from "./OrderHistoryCreateNestedManyWithoutCouponsInput";

@InputType()
class CouponCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: false,
    type: () => CouponRedemptionCreateNestedManyWithoutCouponsInput,
  })
  @ValidateNested()
  @Type(() => CouponRedemptionCreateNestedManyWithoutCouponsInput)
  @IsOptional()
  @Field(() => CouponRedemptionCreateNestedManyWithoutCouponsInput, {
    nullable: true,
  })
  couponRedemptions?: CouponRedemptionCreateNestedManyWithoutCouponsInput;

  @ApiProperty({
    required: true,
    type: () => DiscountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscountWhereUniqueInput)
  @Field(() => DiscountWhereUniqueInput)
  discount!: DiscountWhereUniqueInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  expirationDate!: Date;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => OrderHistoryCreateNestedManyWithoutCouponsInput,
  })
  @ValidateNested()
  @Type(() => OrderHistoryCreateNestedManyWithoutCouponsInput)
  @IsOptional()
  @Field(() => OrderHistoryCreateNestedManyWithoutCouponsInput, {
    nullable: true,
  })
  orderHistory?: OrderHistoryCreateNestedManyWithoutCouponsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { CouponCreateInput as CouponCreateInput };
