/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
  IsBoolean,
} from "class-validator";
import { CouponRedemptionUpdateManyWithoutCouponsInput } from "./CouponRedemptionUpdateManyWithoutCouponsInput";
import { Type } from "class-transformer";
import { DiscountWhereUniqueInput } from "../../discount/base/DiscountWhereUniqueInput";
import { OrderHistoryUpdateManyWithoutCouponsInput } from "./OrderHistoryUpdateManyWithoutCouponsInput";

@InputType()
class CouponUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string;

  @ApiProperty({
    required: false,
    type: () => CouponRedemptionUpdateManyWithoutCouponsInput,
  })
  @ValidateNested()
  @Type(() => CouponRedemptionUpdateManyWithoutCouponsInput)
  @IsOptional()
  @Field(() => CouponRedemptionUpdateManyWithoutCouponsInput, {
    nullable: true,
  })
  couponRedemptions?: CouponRedemptionUpdateManyWithoutCouponsInput;

  @ApiProperty({
    required: false,
    type: () => DiscountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscountWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscountWhereUniqueInput, {
    nullable: true,
  })
  discount?: DiscountWhereUniqueInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expirationDate?: Date;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => OrderHistoryUpdateManyWithoutCouponsInput,
  })
  @ValidateNested()
  @Type(() => OrderHistoryUpdateManyWithoutCouponsInput)
  @IsOptional()
  @Field(() => OrderHistoryUpdateManyWithoutCouponsInput, {
    nullable: true,
  })
  orderHistory?: OrderHistoryUpdateManyWithoutCouponsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { CouponUpdateInput as CouponUpdateInput };
