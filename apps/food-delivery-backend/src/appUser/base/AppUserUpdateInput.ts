/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessLogUpdateManyWithoutAppUsersInput } from "./AccessLogUpdateManyWithoutAppUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumAppUserAccountStatus } from "./EnumAppUserAccountStatus";
import { CouponRedemptionUpdateManyWithoutAppUsersInput } from "./CouponRedemptionUpdateManyWithoutAppUsersInput";
import { CustomerPreferenceUpdateManyWithoutAppUsersInput } from "./CustomerPreferenceUpdateManyWithoutAppUsersInput";
import { CustomerSubscriptionUpdateManyWithoutAppUsersInput } from "./CustomerSubscriptionUpdateManyWithoutAppUsersInput";
import { ErrorLogUpdateManyWithoutAppUsersInput } from "./ErrorLogUpdateManyWithoutAppUsersInput";
import { FavouriteUpdateManyWithoutAppUsersInput } from "./FavouriteUpdateManyWithoutAppUsersInput";
import { NotificationUpdateManyWithoutAppUsersInput } from "./NotificationUpdateManyWithoutAppUsersInput";
import { NotificationSettingUpdateManyWithoutAppUsersInput } from "./NotificationSettingUpdateManyWithoutAppUsersInput";
import { OrderHistoryUpdateManyWithoutAppUsersInput } from "./OrderHistoryUpdateManyWithoutAppUsersInput";
import { ReportUpdateManyWithoutAppUsersInput } from "./ReportUpdateManyWithoutAppUsersInput";
import { ReservationUpdateManyWithoutAppUsersInput } from "./ReservationUpdateManyWithoutAppUsersInput";
import { RewardUpdateManyWithoutAppUsersInput } from "./RewardUpdateManyWithoutAppUsersInput";
import { SettlementsBreakupUpdateManyWithoutAppUsersInput } from "./SettlementsBreakupUpdateManyWithoutAppUsersInput";
import { SsoLookupUpdateManyWithoutAppUsersInput } from "./SsoLookupUpdateManyWithoutAppUsersInput";
import { SubscriptionUpdateManyWithoutAppUsersInput } from "./SubscriptionUpdateManyWithoutAppUsersInput";
import { UserCustomerLookupUpdateManyWithoutAppUsersInput } from "./UserCustomerLookupUpdateManyWithoutAppUsersInput";
import { UserFeedbackUpdateManyWithoutAppUsersInput } from "./UserFeedbackUpdateManyWithoutAppUsersInput";
import { UsersHashtagsMapUpdateManyWithoutAppUsersInput } from "./UsersHashtagsMapUpdateManyWithoutAppUsersInput";

@InputType()
class AppUserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccessLogUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => AccessLogUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => AccessLogUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  accessLogs?: AccessLogUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    enum: EnumAppUserAccountStatus,
  })
  @IsEnum(EnumAppUserAccountStatus)
  @IsOptional()
  @Field(() => EnumAppUserAccountStatus, {
    nullable: true,
  })
  account_status?: "Live" | "Is_Disabled" | "Is_Deleted" | null;

  @ApiProperty({
    required: false,
    type: () => CouponRedemptionUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CouponRedemptionUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CouponRedemptionUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  couponRedemptions?: CouponRedemptionUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerPreferenceUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CustomerPreferenceUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CustomerPreferenceUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  customerPreferences?: CustomerPreferenceUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerSubscriptionUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CustomerSubscriptionUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CustomerSubscriptionUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  customerSubscriptions?: CustomerSubscriptionUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => ErrorLogUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ErrorLogUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ErrorLogUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  errorLogs?: ErrorLogUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => FavouriteUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => FavouriteUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => FavouriteUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  favourites?: FavouriteUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationSettingUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationSettingUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => NotificationSettingUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  notificationSettings?: NotificationSettingUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => OrderHistoryUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => OrderHistoryUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => OrderHistoryUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  orderHistory?: OrderHistoryUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profilePicUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReportUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ReportUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ReportUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  reports?: ReportUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => ReservationUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ReservationUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ReservationUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  reservations?: ReservationUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => RewardUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => RewardUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => RewardUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  rewards?: RewardUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SettlementsBreakupUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SettlementsBreakupUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SettlementsBreakupUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  settlementsBreakup?: SettlementsBreakupUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SsoLookupUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SsoLookupUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SsoLookupUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  ssoLookup?: SsoLookupUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserCustomerLookupUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UserCustomerLookupUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UserCustomerLookupUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  userCustomerLookup?: UserCustomerLookupUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserFeedbackUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UserFeedbackUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UserFeedbackUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  userFeedbacks?: UserFeedbackUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => UsersHashtagsMapUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UsersHashtagsMapUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UsersHashtagsMapUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  usersHashtagsMap?: UsersHashtagsMapUpdateManyWithoutAppUsersInput;
}

export { AppUserUpdateInput as AppUserUpdateInput };
