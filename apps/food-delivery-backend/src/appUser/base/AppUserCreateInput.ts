/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessLogCreateNestedManyWithoutAppUsersInput } from "./AccessLogCreateNestedManyWithoutAppUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumAppUserAccountStatus } from "./EnumAppUserAccountStatus";
import { CouponRedemptionCreateNestedManyWithoutAppUsersInput } from "./CouponRedemptionCreateNestedManyWithoutAppUsersInput";
import { CustomerPreferenceCreateNestedManyWithoutAppUsersInput } from "./CustomerPreferenceCreateNestedManyWithoutAppUsersInput";
import { CustomerSubscriptionCreateNestedManyWithoutAppUsersInput } from "./CustomerSubscriptionCreateNestedManyWithoutAppUsersInput";
import { ErrorLogCreateNestedManyWithoutAppUsersInput } from "./ErrorLogCreateNestedManyWithoutAppUsersInput";
import { FavouriteCreateNestedManyWithoutAppUsersInput } from "./FavouriteCreateNestedManyWithoutAppUsersInput";
import { NotificationCreateNestedManyWithoutAppUsersInput } from "./NotificationCreateNestedManyWithoutAppUsersInput";
import { NotificationSettingCreateNestedManyWithoutAppUsersInput } from "./NotificationSettingCreateNestedManyWithoutAppUsersInput";
import { OrderHistoryCreateNestedManyWithoutAppUsersInput } from "./OrderHistoryCreateNestedManyWithoutAppUsersInput";
import { ReportCreateNestedManyWithoutAppUsersInput } from "./ReportCreateNestedManyWithoutAppUsersInput";
import { ReservationCreateNestedManyWithoutAppUsersInput } from "./ReservationCreateNestedManyWithoutAppUsersInput";
import { RewardCreateNestedManyWithoutAppUsersInput } from "./RewardCreateNestedManyWithoutAppUsersInput";
import { SettlementsBreakupCreateNestedManyWithoutAppUsersInput } from "./SettlementsBreakupCreateNestedManyWithoutAppUsersInput";
import { SsoLookupCreateNestedManyWithoutAppUsersInput } from "./SsoLookupCreateNestedManyWithoutAppUsersInput";
import { SubscriptionCreateNestedManyWithoutAppUsersInput } from "./SubscriptionCreateNestedManyWithoutAppUsersInput";
import { UserCustomerLookupCreateNestedManyWithoutAppUsersInput } from "./UserCustomerLookupCreateNestedManyWithoutAppUsersInput";
import { UserFeedbackCreateNestedManyWithoutAppUsersInput } from "./UserFeedbackCreateNestedManyWithoutAppUsersInput";
import { UsersHashtagsMapCreateNestedManyWithoutAppUsersInput } from "./UsersHashtagsMapCreateNestedManyWithoutAppUsersInput";

@InputType()
class AppUserCreateInput {
  @ApiProperty({
    required: false,
    type: () => AccessLogCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => AccessLogCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => AccessLogCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  accessLogs?: AccessLogCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    enum: EnumAppUserAccountStatus,
  })
  @IsEnum(EnumAppUserAccountStatus)
  @IsOptional()
  @Field(() => EnumAppUserAccountStatus, {
    nullable: true,
  })
  account_status?: "Live" | "Is_Disabled" | "Is_Deleted" | null;

  @ApiProperty({
    required: false,
    type: () => CouponRedemptionCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CouponRedemptionCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CouponRedemptionCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  couponRedemptions?: CouponRedemptionCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerPreferenceCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CustomerPreferenceCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CustomerPreferenceCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  customerPreferences?: CustomerPreferenceCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerSubscriptionCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => CustomerSubscriptionCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => CustomerSubscriptionCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  customerSubscriptions?: CustomerSubscriptionCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => ErrorLogCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ErrorLogCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ErrorLogCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  errorLogs?: ErrorLogCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => FavouriteCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => FavouriteCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => FavouriteCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  favourites?: FavouriteCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => NotificationCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  notifications?: NotificationCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationSettingCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationSettingCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => NotificationSettingCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  notificationSettings?: NotificationSettingCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => OrderHistoryCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => OrderHistoryCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => OrderHistoryCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  orderHistory?: OrderHistoryCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profilePicUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => ReservationCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => ReservationCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => ReservationCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  reservations?: ReservationCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => RewardCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => RewardCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => RewardCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  rewards?: RewardCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SettlementsBreakupCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SettlementsBreakupCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SettlementsBreakupCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  settlementsBreakup?: SettlementsBreakupCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SsoLookupCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SsoLookupCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SsoLookupCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  ssoLookup?: SsoLookupCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => SubscriptionCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserCustomerLookupCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UserCustomerLookupCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UserCustomerLookupCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  userCustomerLookup?: UserCustomerLookupCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserFeedbackCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UserFeedbackCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UserFeedbackCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  userFeedbacks?: UserFeedbackCreateNestedManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: () => UsersHashtagsMapCreateNestedManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UsersHashtagsMapCreateNestedManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UsersHashtagsMapCreateNestedManyWithoutAppUsersInput, {
    nullable: true,
  })
  usersHashtagsMap?: UsersHashtagsMapCreateNestedManyWithoutAppUsersInput;
}

export { AppUserCreateInput as AppUserCreateInput };
