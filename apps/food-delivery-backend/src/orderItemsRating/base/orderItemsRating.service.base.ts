/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  OrderItemsRating as PrismaOrderItemsRating,
  OrderItem as PrismaOrderItem,
  Rating as PrismaRating,
} from "@prisma/client";

export class OrderItemsRatingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrderItemsRatingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orderItemsRating.count(args);
  }

  async orderItemsRatings<T extends Prisma.OrderItemsRatingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsRatingFindManyArgs>
  ): Promise<PrismaOrderItemsRating[]> {
    return this.prisma.orderItemsRating.findMany<Prisma.OrderItemsRatingFindManyArgs>(
      args
    );
  }
  async orderItemsRating<T extends Prisma.OrderItemsRatingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsRatingFindUniqueArgs>
  ): Promise<PrismaOrderItemsRating | null> {
    return this.prisma.orderItemsRating.findUnique(args);
  }
  async createOrderItemsRating<T extends Prisma.OrderItemsRatingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsRatingCreateArgs>
  ): Promise<PrismaOrderItemsRating> {
    return this.prisma.orderItemsRating.create<T>(args);
  }
  async updateOrderItemsRating<T extends Prisma.OrderItemsRatingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsRatingUpdateArgs>
  ): Promise<PrismaOrderItemsRating> {
    return this.prisma.orderItemsRating.update<T>(args);
  }
  async deleteOrderItemsRating<T extends Prisma.OrderItemsRatingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsRatingDeleteArgs>
  ): Promise<PrismaOrderItemsRating> {
    return this.prisma.orderItemsRating.delete(args);
  }

  async getOrderItems(parentId: string): Promise<PrismaOrderItem | null> {
    return this.prisma.orderItemsRating
      .findUnique({
        where: { id: parentId },
      })
      .orderItems();
  }

  async getRatings(parentId: string): Promise<PrismaRating | null> {
    return this.prisma.orderItemsRating
      .findUnique({
        where: { id: parentId },
      })
      .ratings();
  }
}
