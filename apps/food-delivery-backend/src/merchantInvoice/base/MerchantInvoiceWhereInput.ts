/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { EnumMerchantInvoiceInvoiceStatus } from "./EnumMerchantInvoiceInvoiceStatus";
import { EnumMerchantInvoiceInvoiceType } from "./EnumMerchantInvoiceInvoiceType";
import { RestaurantWhereUniqueInput } from "../../restaurant/base/RestaurantWhereUniqueInput";

@InputType()
class MerchantInvoiceWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  createdAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  invoiceGenerationDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  invoiceSentDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumMerchantInvoiceInvoiceStatus,
  })
  @IsEnum(EnumMerchantInvoiceInvoiceStatus)
  @IsOptional()
  @Field(() => EnumMerchantInvoiceInvoiceStatus, {
    nullable: true,
  })
  invoice_status?: "Invoice_Generated" | "Invoice_Sent" | "Error_Found";

  @ApiProperty({
    required: false,
    enum: EnumMerchantInvoiceInvoiceType,
  })
  @IsEnum(EnumMerchantInvoiceInvoiceType)
  @IsOptional()
  @Field(() => EnumMerchantInvoiceInvoiceType, {
    nullable: true,
  })
  invoice_type?: "Online_Order" | "Dine_In" | "Take_Away" | "Recovery";

  @ApiProperty({
    required: false,
    type: () => RestaurantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RestaurantWhereUniqueInput)
  @IsOptional()
  @Field(() => RestaurantWhereUniqueInput, {
    nullable: true,
  })
  restaurants?: RestaurantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;
}

export { MerchantInvoiceWhereInput as MerchantInvoiceWhereInput };
