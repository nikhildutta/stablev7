/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
  IsDate,
  IsBoolean,
} from "class-validator";
import { Decimal } from "decimal.js";
import { ComboItemTable } from "../../comboItemTable/base/ComboItemTable";
import { Type } from "class-transformer";
import { ComboItemWindowMap } from "../../comboItemWindowMap/base/ComboItemWindowMap";
import { EnumComboGroupComboType } from "./EnumComboGroupComboType";
import { Restaurant } from "../../restaurant/base/Restaurant";

@ObjectType()
class ComboGroup {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  comboBasePrice!: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comboDescription!: string | null;

  @ApiProperty({
    required: false,
    type: () => [ComboItemTable],
  })
  @ValidateNested()
  @Type(() => ComboItemTable)
  @IsOptional()
  comboItemTable?: Array<ComboItemTable>;

  @ApiProperty({
    required: false,
    type: () => [ComboItemWindowMap],
  })
  @ValidateNested()
  @Type(() => ComboItemWindowMap)
  @IsOptional()
  comboItemWindowMap?: Array<ComboItemWindowMap>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  comboName!: string;

  @ApiProperty({
    required: false,
    enum: EnumComboGroupComboType,
  })
  @IsEnum(EnumComboGroupComboType)
  @IsOptional()
  @Field(() => EnumComboGroupComboType, {
    nullable: true,
  })
  combo_type?: "Default" | "Customizable" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isBankCoupon!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPlatformCoupon!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isRestuaruantCoupon!: boolean | null;

  @ApiProperty({
    required: true,
    type: () => Restaurant,
  })
  @ValidateNested()
  @Type(() => Restaurant)
  restaurants?: Restaurant;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;
}

export { ComboGroup as ComboGroup };
