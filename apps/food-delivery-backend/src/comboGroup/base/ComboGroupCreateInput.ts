/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
  IsBoolean,
  IsDate,
} from "class-validator";
import { Decimal } from "decimal.js";
import { ComboItemTableCreateNestedManyWithoutComboGroupsInput } from "./ComboItemTableCreateNestedManyWithoutComboGroupsInput";
import { Type } from "class-transformer";
import { ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput } from "./ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput";
import { EnumComboGroupComboType } from "./EnumComboGroupComboType";
import { RestaurantWhereUniqueInput } from "../../restaurant/base/RestaurantWhereUniqueInput";

@InputType()
class ComboGroupCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  comboBasePrice?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comboDescription?: string | null;

  @ApiProperty({
    required: false,
    type: () => ComboItemTableCreateNestedManyWithoutComboGroupsInput,
  })
  @ValidateNested()
  @Type(() => ComboItemTableCreateNestedManyWithoutComboGroupsInput)
  @IsOptional()
  @Field(() => ComboItemTableCreateNestedManyWithoutComboGroupsInput, {
    nullable: true,
  })
  comboItemTable?: ComboItemTableCreateNestedManyWithoutComboGroupsInput;

  @ApiProperty({
    required: false,
    type: () => ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput,
  })
  @ValidateNested()
  @Type(() => ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput)
  @IsOptional()
  @Field(() => ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput, {
    nullable: true,
  })
  comboItemWindowMap?: ComboItemWindowMapCreateNestedManyWithoutComboGroupsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  comboName!: string;

  @ApiProperty({
    required: false,
    enum: EnumComboGroupComboType,
  })
  @IsEnum(EnumComboGroupComboType)
  @IsOptional()
  @Field(() => EnumComboGroupComboType, {
    nullable: true,
  })
  combo_type?: "Default" | "Customizable" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isBankCoupon?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPlatformCoupon?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isRestuaruantCoupon?: boolean | null;

  @ApiProperty({
    required: true,
    type: () => RestaurantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RestaurantWhereUniqueInput)
  @Field(() => RestaurantWhereUniqueInput)
  restaurants!: RestaurantWhereUniqueInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { ComboGroupCreateInput as ComboGroupCreateInput };
