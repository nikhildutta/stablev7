/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountRestaurantLookupListRelationFilter } from "../../accountRestaurantLookup/base/AccountRestaurantLookupListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { EnumRestaurantClosureStatus } from "./EnumRestaurantClosureStatus";
import { ComboGroupListRelationFilter } from "../../comboGroup/base/ComboGroupListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { FavouriteRestaurantListRelationFilter } from "../../favouriteRestaurant/base/FavouriteRestaurantListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { MenuCategoryListRelationFilter } from "../../menuCategory/base/MenuCategoryListRelationFilter";
import { MerchantInvoiceListRelationFilter } from "../../merchantInvoice/base/MerchantInvoiceListRelationFilter";
import { OrderHistoryListRelationFilter } from "../../orderHistory/base/OrderHistoryListRelationFilter";
import { OrderPackagingFeeListRelationFilter } from "../../orderPackagingFee/base/OrderPackagingFeeListRelationFilter";
import { EnumRestaurantPackagingFeeType } from "./EnumRestaurantPackagingFeeType";
import { PayoutCycleListRelationFilter } from "../../payoutCycle/base/PayoutCycleListRelationFilter";
import { PayoutInformationTableListRelationFilter } from "../../payoutInformationTable/base/PayoutInformationTableListRelationFilter";
import { PortalUsersRelationsLookupListRelationFilter } from "../../portalUsersRelationsLookup/base/PortalUsersRelationsLookupListRelationFilter";
import { ReservationListRelationFilter } from "../../reservation/base/ReservationListRelationFilter";
import { RestaurantDetailListRelationFilter } from "../../restaurantDetail/base/RestaurantDetailListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { RestaurantPreferenceListRelationFilter } from "../../restaurantPreference/base/RestaurantPreferenceListRelationFilter";
import { RestaurantsHashtagsMapListRelationFilter } from "../../restaurantsHashtagsMap/base/RestaurantsHashtagsMapListRelationFilter";
import { RestaurantTimeWindowMapListRelationFilter } from "../../restaurantTimeWindowMap/base/RestaurantTimeWindowMapListRelationFilter";
import { TaxRateInformationListRelationFilter } from "../../taxRateInformation/base/TaxRateInformationListRelationFilter";

@InputType()
class RestaurantWhereInput {
  @ApiProperty({
    required: false,
    type: () => AccountRestaurantLookupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccountRestaurantLookupListRelationFilter)
  @IsOptional()
  @Field(() => AccountRestaurantLookupListRelationFilter, {
    nullable: true,
  })
  accountRestaurantLookup?: AccountRestaurantLookupListRelationFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  averageCost?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumRestaurantClosureStatus,
  })
  @IsEnum(EnumRestaurantClosureStatus)
  @IsOptional()
  @Field(() => EnumRestaurantClosureStatus, {
    nullable: true,
  })
  closure_status?: "Temporarily_Closed" | "Permanently_Closed";

  @ApiProperty({
    required: false,
    type: () => ComboGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ComboGroupListRelationFilter)
  @IsOptional()
  @Field(() => ComboGroupListRelationFilter, {
    nullable: true,
  })
  comboGroups?: ComboGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  createdAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FavouriteRestaurantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FavouriteRestaurantListRelationFilter)
  @IsOptional()
  @Field(() => FavouriteRestaurantListRelationFilter, {
    nullable: true,
  })
  favouriteRestaurant?: FavouriteRestaurantListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isActive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDelivery?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDineIn?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isHidden?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isTakeaway?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MenuCategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MenuCategoryListRelationFilter)
  @IsOptional()
  @Field(() => MenuCategoryListRelationFilter, {
    nullable: true,
  })
  menuCategories?: MenuCategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MerchantInvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MerchantInvoiceListRelationFilter)
  @IsOptional()
  @Field(() => MerchantInvoiceListRelationFilter, {
    nullable: true,
  })
  merchantInvoices?: MerchantInvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrderHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderHistoryListRelationFilter)
  @IsOptional()
  @Field(() => OrderHistoryListRelationFilter, {
    nullable: true,
  })
  orderHistory?: OrderHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrderPackagingFeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderPackagingFeeListRelationFilter)
  @IsOptional()
  @Field(() => OrderPackagingFeeListRelationFilter, {
    nullable: true,
  })
  orderPackagingFee?: OrderPackagingFeeListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumRestaurantPackagingFeeType,
  })
  @IsEnum(EnumRestaurantPackagingFeeType)
  @IsOptional()
  @Field(() => EnumRestaurantPackagingFeeType, {
    nullable: true,
  })
  packaging_fee_type?: "Item" | "Order" | "None";

  @ApiProperty({
    required: false,
    type: () => PayoutCycleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PayoutCycleListRelationFilter)
  @IsOptional()
  @Field(() => PayoutCycleListRelationFilter, {
    nullable: true,
  })
  payoutCycles?: PayoutCycleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PayoutInformationTableListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PayoutInformationTableListRelationFilter)
  @IsOptional()
  @Field(() => PayoutInformationTableListRelationFilter, {
    nullable: true,
  })
  payoutInformationTable?: PayoutInformationTableListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PortalUsersRelationsLookupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PortalUsersRelationsLookupListRelationFilter)
  @IsOptional()
  @Field(() => PortalUsersRelationsLookupListRelationFilter, {
    nullable: true,
  })
  portalUsersRelationsLookup?: PortalUsersRelationsLookupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReservationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReservationListRelationFilter)
  @IsOptional()
  @Field(() => ReservationListRelationFilter, {
    nullable: true,
  })
  reservations?: ReservationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RestaurantDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RestaurantDetailListRelationFilter)
  @IsOptional()
  @Field(() => RestaurantDetailListRelationFilter, {
    nullable: true,
  })
  restaurantDetails?: RestaurantDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  restaurantIconUrl?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  restaurantIdRef?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => RestaurantPreferenceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RestaurantPreferenceListRelationFilter)
  @IsOptional()
  @Field(() => RestaurantPreferenceListRelationFilter, {
    nullable: true,
  })
  restaurantPreferences?: RestaurantPreferenceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RestaurantsHashtagsMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RestaurantsHashtagsMapListRelationFilter)
  @IsOptional()
  @Field(() => RestaurantsHashtagsMapListRelationFilter, {
    nullable: true,
  })
  restaurantsHashtagsMap?: RestaurantsHashtagsMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RestaurantTimeWindowMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RestaurantTimeWindowMapListRelationFilter)
  @IsOptional()
  @Field(() => RestaurantTimeWindowMapListRelationFilter, {
    nullable: true,
  })
  restaurantTimeWindowMap?: RestaurantTimeWindowMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  shareSlug?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TaxRateInformationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaxRateInformationListRelationFilter)
  @IsOptional()
  @Field(() => TaxRateInformationListRelationFilter, {
    nullable: true,
  })
  taxRateInformation?: TaxRateInformationListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;
}

export { RestaurantWhereInput as RestaurantWhereInput };
