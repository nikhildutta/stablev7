/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DeliveryInstructionAddressMap as PrismaDeliveryInstructionAddressMap,
  Address as PrismaAddress,
  DeliveryPartnerInstruction as PrismaDeliveryPartnerInstruction,
} from "@prisma/client";

export class DeliveryInstructionAddressMapServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryInstructionAddressMapCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryInstructionAddressMap.count(args);
  }

  async deliveryInstructionAddressMaps<
    T extends Prisma.DeliveryInstructionAddressMapFindManyArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.DeliveryInstructionAddressMapFindManyArgs
    >
  ): Promise<PrismaDeliveryInstructionAddressMap[]> {
    return this.prisma.deliveryInstructionAddressMap.findMany<Prisma.DeliveryInstructionAddressMapFindManyArgs>(
      args
    );
  }
  async deliveryInstructionAddressMap<
    T extends Prisma.DeliveryInstructionAddressMapFindUniqueArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.DeliveryInstructionAddressMapFindUniqueArgs
    >
  ): Promise<PrismaDeliveryInstructionAddressMap | null> {
    return this.prisma.deliveryInstructionAddressMap.findUnique(args);
  }
  async createDeliveryInstructionAddressMap<
    T extends Prisma.DeliveryInstructionAddressMapCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DeliveryInstructionAddressMapCreateArgs>
  ): Promise<PrismaDeliveryInstructionAddressMap> {
    return this.prisma.deliveryInstructionAddressMap.create<T>(args);
  }
  async updateDeliveryInstructionAddressMap<
    T extends Prisma.DeliveryInstructionAddressMapUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DeliveryInstructionAddressMapUpdateArgs>
  ): Promise<PrismaDeliveryInstructionAddressMap> {
    return this.prisma.deliveryInstructionAddressMap.update<T>(args);
  }
  async deleteDeliveryInstructionAddressMap<
    T extends Prisma.DeliveryInstructionAddressMapDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DeliveryInstructionAddressMapDeleteArgs>
  ): Promise<PrismaDeliveryInstructionAddressMap> {
    return this.prisma.deliveryInstructionAddressMap.delete(args);
  }

  async getAddresses(parentId: string): Promise<PrismaAddress | null> {
    return this.prisma.deliveryInstructionAddressMap
      .findUnique({
        where: { id: parentId },
      })
      .addresses();
  }

  async getDeliveryPartnerInstruction(
    parentId: string
  ): Promise<PrismaDeliveryPartnerInstruction | null> {
    return this.prisma.deliveryInstructionAddressMap
      .findUnique({
        where: { id: parentId },
      })
      .deliveryPartnerInstruction();
  }
}
