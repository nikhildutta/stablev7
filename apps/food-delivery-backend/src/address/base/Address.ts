/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountsAddressMap } from "../../accountsAddressMap/base/AccountsAddressMap";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { ContactDetail } from "../../contactDetail/base/ContactDetail";
import { CustomerAddressMap } from "../../customerAddressMap/base/CustomerAddressMap";
import { DeliveryInstructionAddressMap } from "../../deliveryInstructionAddressMap/base/DeliveryInstructionAddressMap";
import { GeoLocation } from "../../geoLocation/base/GeoLocation";
import { OrderHistory } from "../../orderHistory/base/OrderHistory";

@ObjectType()
class Address {
  @ApiProperty({
    required: false,
    type: () => [AccountsAddressMap],
  })
  @ValidateNested()
  @Type(() => AccountsAddressMap)
  @IsOptional()
  accountsAddressMap?: Array<AccountsAddressMap>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine1!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine2!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine3!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city!: string | null;

  @ApiProperty({
    required: false,
    type: () => [ContactDetail],
  })
  @ValidateNested()
  @Type(() => ContactDetail)
  @IsOptional()
  contactDetails?: Array<ContactDetail>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [CustomerAddressMap],
  })
  @ValidateNested()
  @Type(() => CustomerAddressMap)
  @IsOptional()
  customerAddressMap?: Array<CustomerAddressMap>;

  @ApiProperty({
    required: false,
    type: () => [DeliveryInstructionAddressMap],
  })
  @ValidateNested()
  @Type(() => DeliveryInstructionAddressMap)
  @IsOptional()
  deliveryInstructionAddressMap?: Array<DeliveryInstructionAddressMap>;

  @ApiProperty({
    required: false,
    type: () => [GeoLocation],
  })
  @ValidateNested()
  @Type(() => GeoLocation)
  @IsOptional()
  geoLocations?: Array<GeoLocation>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPrimary!: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nickName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [OrderHistory],
  })
  @ValidateNested()
  @Type(() => OrderHistory)
  @IsOptional()
  orderHistory?: Array<OrderHistory>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  pincode!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;
}

export { Address as Address };
