/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { DailyMenuItemStockListRelationFilter } from "../../dailyMenuItemStock/base/DailyMenuItemStockListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DiscountMenuItemListRelationFilter } from "../../discountMenuItem/base/DiscountMenuItemListRelationFilter";
import { FavouriteMenuItemListRelationFilter } from "../../favouriteMenuItem/base/FavouriteMenuItemListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { ItemPackagingFeeListRelationFilter } from "../../itemPackagingFee/base/ItemPackagingFeeListRelationFilter";
import { MenuItemIngredientListRelationFilter } from "../../menuItemIngredient/base/MenuItemIngredientListRelationFilter";
import { MenuItemsHashtagsMapListRelationFilter } from "../../menuItemsHashtagsMap/base/MenuItemsHashtagsMapListRelationFilter";
import { MenuItemsOptionsGroupListRelationFilter } from "../../menuItemsOptionsGroup/base/MenuItemsOptionsGroupListRelationFilter";
import { MenuItemsWindowMapListRelationFilter } from "../../menuItemsWindowMap/base/MenuItemsWindowMapListRelationFilter";
import { MenuSubCategoryWhereUniqueInput } from "../../menuSubCategory/base/MenuSubCategoryWhereUniqueInput";

@InputType()
class MenuItemWhereInput {
  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  availableQuantity?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  basePrice?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  containsEgg?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  createdAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DailyMenuItemStockListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DailyMenuItemStockListRelationFilter)
  @IsOptional()
  @Field(() => DailyMenuItemStockListRelationFilter, {
    nullable: true,
  })
  dailyMenuItemStock?: DailyMenuItemStockListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DiscountMenuItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DiscountMenuItemListRelationFilter)
  @IsOptional()
  @Field(() => DiscountMenuItemListRelationFilter, {
    nullable: true,
  })
  discountMenuItem?: DiscountMenuItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => FavouriteMenuItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FavouriteMenuItemListRelationFilter)
  @IsOptional()
  @Field(() => FavouriteMenuItemListRelationFilter, {
    nullable: true,
  })
  favouriteMenuItems?: FavouriteMenuItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  imageUrl?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ingredients?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isActive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDeliverable?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDineinAvailable?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isLimitedStock?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isPickup?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isVegetarian?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ItemPackagingFeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ItemPackagingFeeListRelationFilter)
  @IsOptional()
  @Field(() => ItemPackagingFeeListRelationFilter, {
    nullable: true,
  })
  itemPackagingFee?: ItemPackagingFeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MenuItemIngredientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MenuItemIngredientListRelationFilter)
  @IsOptional()
  @Field(() => MenuItemIngredientListRelationFilter, {
    nullable: true,
  })
  menuItemIngredients?: MenuItemIngredientListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MenuItemsHashtagsMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MenuItemsHashtagsMapListRelationFilter)
  @IsOptional()
  @Field(() => MenuItemsHashtagsMapListRelationFilter, {
    nullable: true,
  })
  menuItemsHashtagsMap?: MenuItemsHashtagsMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MenuItemsOptionsGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MenuItemsOptionsGroupListRelationFilter)
  @IsOptional()
  @Field(() => MenuItemsOptionsGroupListRelationFilter, {
    nullable: true,
  })
  menuItemsOptionsGroups?: MenuItemsOptionsGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MenuItemsWindowMapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MenuItemsWindowMapListRelationFilter)
  @IsOptional()
  @Field(() => MenuItemsWindowMapListRelationFilter, {
    nullable: true,
  })
  menuItemsWindowMap?: MenuItemsWindowMapListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MenuSubCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MenuSubCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => MenuSubCategoryWhereUniqueInput, {
    nullable: true,
  })
  menuSubCategories?: MenuSubCategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  preparationTime?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  shareSlug?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;
}

export { MenuItemWhereInput as MenuItemWhereInput };
