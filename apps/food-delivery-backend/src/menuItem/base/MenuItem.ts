/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsNumber,
  IsBoolean,
  IsDate,
  ValidateNested,
  IsString,
} from "class-validator";
import { Decimal } from "decimal.js";
import { Type } from "class-transformer";
import { DailyMenuItemStock } from "../../dailyMenuItemStock/base/DailyMenuItemStock";
import { DiscountMenuItem } from "../../discountMenuItem/base/DiscountMenuItem";
import { FavouriteMenuItem } from "../../favouriteMenuItem/base/FavouriteMenuItem";
import { ItemPackagingFee } from "../../itemPackagingFee/base/ItemPackagingFee";
import { MenuItemIngredient } from "../../menuItemIngredient/base/MenuItemIngredient";
import { MenuItemsHashtagsMap } from "../../menuItemsHashtagsMap/base/MenuItemsHashtagsMap";
import { MenuItemsOptionsGroup } from "../../menuItemsOptionsGroup/base/MenuItemsOptionsGroup";
import { MenuItemsWindowMap } from "../../menuItemsWindowMap/base/MenuItemsWindowMap";
import { MenuSubCategory } from "../../menuSubCategory/base/MenuSubCategory";

@ObjectType()
class MenuItem {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  availableQuantity!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  basePrice!: Decimal | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  containsEgg!: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [DailyMenuItemStock],
  })
  @ValidateNested()
  @Type(() => DailyMenuItemStock)
  @IsOptional()
  dailyMenuItemStock?: Array<DailyMenuItemStock>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    type: () => [DiscountMenuItem],
  })
  @ValidateNested()
  @Type(() => DiscountMenuItem)
  @IsOptional()
  discountMenuItem?: Array<DiscountMenuItem>;

  @ApiProperty({
    required: false,
    type: () => [FavouriteMenuItem],
  })
  @ValidateNested()
  @Type(() => FavouriteMenuItem)
  @IsOptional()
  favouriteMenuItems?: Array<FavouriteMenuItem>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ingredients!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDeliverable!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDineinAvailable!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isLimitedStock!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPickup!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isVegetarian!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [ItemPackagingFee],
  })
  @ValidateNested()
  @Type(() => ItemPackagingFee)
  @IsOptional()
  itemPackagingFee?: Array<ItemPackagingFee>;

  @ApiProperty({
    required: false,
    type: () => [MenuItemIngredient],
  })
  @ValidateNested()
  @Type(() => MenuItemIngredient)
  @IsOptional()
  menuItemIngredients?: Array<MenuItemIngredient>;

  @ApiProperty({
    required: false,
    type: () => [MenuItemsHashtagsMap],
  })
  @ValidateNested()
  @Type(() => MenuItemsHashtagsMap)
  @IsOptional()
  menuItemsHashtagsMap?: Array<MenuItemsHashtagsMap>;

  @ApiProperty({
    required: false,
    type: () => [MenuItemsOptionsGroup],
  })
  @ValidateNested()
  @Type(() => MenuItemsOptionsGroup)
  @IsOptional()
  menuItemsOptionsGroups?: Array<MenuItemsOptionsGroup>;

  @ApiProperty({
    required: false,
    type: () => [MenuItemsWindowMap],
  })
  @ValidateNested()
  @Type(() => MenuItemsWindowMap)
  @IsOptional()
  menuItemsWindowMap?: Array<MenuItemsWindowMap>;

  @ApiProperty({
    required: true,
    type: () => MenuSubCategory,
  })
  @ValidateNested()
  @Type(() => MenuSubCategory)
  menuSubCategories?: MenuSubCategory;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  preparationTime!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareSlug!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;
}

export { MenuItem as MenuItem };
