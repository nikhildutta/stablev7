/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsNumber,
  IsBoolean,
  ValidateNested,
  IsString,
  IsDate,
} from "class-validator";
import { Decimal } from "decimal.js";
import { DailyMenuItemStockUpdateManyWithoutMenuItemsInput } from "./DailyMenuItemStockUpdateManyWithoutMenuItemsInput";
import { Type } from "class-transformer";
import { DiscountMenuItemUpdateManyWithoutMenuItemsInput } from "./DiscountMenuItemUpdateManyWithoutMenuItemsInput";
import { FavouriteMenuItemUpdateManyWithoutMenuItemsInput } from "./FavouriteMenuItemUpdateManyWithoutMenuItemsInput";
import { ItemPackagingFeeUpdateManyWithoutMenuItemsInput } from "./ItemPackagingFeeUpdateManyWithoutMenuItemsInput";
import { MenuItemIngredientUpdateManyWithoutMenuItemsInput } from "./MenuItemIngredientUpdateManyWithoutMenuItemsInput";
import { MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput } from "./MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput";
import { MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput } from "./MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput";
import { MenuItemsWindowMapUpdateManyWithoutMenuItemsInput } from "./MenuItemsWindowMapUpdateManyWithoutMenuItemsInput";
import { MenuSubCategoryWhereUniqueInput } from "../../menuSubCategory/base/MenuSubCategoryWhereUniqueInput";

@InputType()
class MenuItemUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  availableQuantity?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  basePrice?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  containsEgg?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => DailyMenuItemStockUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => DailyMenuItemStockUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => DailyMenuItemStockUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  dailyMenuItemStock?: DailyMenuItemStockUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => DiscountMenuItemUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => DiscountMenuItemUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => DiscountMenuItemUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  discountMenuItem?: DiscountMenuItemUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => FavouriteMenuItemUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => FavouriteMenuItemUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => FavouriteMenuItemUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  favouriteMenuItems?: FavouriteMenuItemUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ingredients?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDeliverable?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDineinAvailable?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isLimitedStock?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPickup?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isVegetarian?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => ItemPackagingFeeUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => ItemPackagingFeeUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => ItemPackagingFeeUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  itemPackagingFee?: ItemPackagingFeeUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => MenuItemIngredientUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => MenuItemIngredientUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => MenuItemIngredientUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  menuItemIngredients?: MenuItemIngredientUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  menuItemsHashtagsMap?: MenuItemsHashtagsMapUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  menuItemsOptionsGroups?: MenuItemsOptionsGroupUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => MenuItemsWindowMapUpdateManyWithoutMenuItemsInput,
  })
  @ValidateNested()
  @Type(() => MenuItemsWindowMapUpdateManyWithoutMenuItemsInput)
  @IsOptional()
  @Field(() => MenuItemsWindowMapUpdateManyWithoutMenuItemsInput, {
    nullable: true,
  })
  menuItemsWindowMap?: MenuItemsWindowMapUpdateManyWithoutMenuItemsInput;

  @ApiProperty({
    required: false,
    type: () => MenuSubCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MenuSubCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => MenuSubCategoryWhereUniqueInput, {
    nullable: true,
  })
  menuSubCategories?: MenuSubCategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  preparationTime?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareSlug?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { MenuItemUpdateInput as MenuItemUpdateInput };
